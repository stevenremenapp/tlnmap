{"version":3,"sources":["components/Sidebar.js","components/MapPin.js","components/Infowindow.js","components/Map.js","App.js","index.js"],"names":["Sidebar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleSidebarStateChange","state","handleSidebarStateChange","_updateQuery","newQuery","setState","query","filterLocations","_this2","react_default","a","createElement","BurgerMenu","right","noOverlay","disableOverlayClick","isOpen","onStateChange","className","filteredLocations","length","type","placeholder","id","name","value","onChange","event","target","map","library","index","tabIndex","key","concat","onClick","onViewportChange","openInfowindow","onMouseOver","React","Component","MapPin","_this$props","_this$props$size","size","height","viewBox","style","objectSpread","cursor","fill","stroke","transform","d","PureComponent","Infowindow","info","displayName","tlnCode","role","aria-labelledby","rel","href","website","require","config","Map","_onViewportChange","viewport","_mapClickToCloseInfowindow","closeInfowindow","_closeInfowindow","_openInfowindow","_resize","bind","assertThisInitialized","window","addEventListener","removeEventListener","width","innerWidth","innerHeight","popupInfo","esm","tipSize","anchor","latitude","longitude","onClose","Infowindow_Infowindow","_this3","aria-label","assign","mapStyle","mapboxApiAccessToken","process","alt","MapPin_MapPin","selected","_renderPopup","App","componentDidMount","filtered","_filterLocations","all","sidebarOpen","_handleSidebarFocus","document","getElementById","focus","allLocations","filter","location","toLowerCase","includes","_handleInfowindowFocus","querySelector","keyCode","_goToViewport","_ref","zoom","transitionInterpolator","FlyToInterpolator","transitionDuration","maxZoom","bearing","pitch","LIBRARIES","hasError","src_components_Sidebar","Map_Map","error","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.1c40efab.chunk.js","sourcesContent":["import React from 'react';\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport './Sidebar.css';\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: \"\"\r\n        }\r\n    }\r\n\r\n    // Keep track of open/close sidebar state\r\n    _handleSidebarStateChange = (state) => {\r\n        this.props.handleSidebarStateChange(state);\r\n    }\r\n\r\n    // Keep track of query in state and run the filter method with each change\r\n    _updateQuery = (newQuery) => {\r\n        this.setState({ query: newQuery });\r\n        this.props.filterLocations(newQuery);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Menu\r\n            right\r\n            noOverlay = {true}\r\n            disableOverlayClick\r\n            isOpen={this.props.isOpen}\r\n            onStateChange={(state) => this._handleSidebarStateChange(state)}\r\n            >\r\n                <div className=\"search-box\">\r\n                    <h1 className=\"sidebar-header\">Locations</h1>\r\n                    <p>Now listing\r\n                    <span> {this.props.filteredLocations ? this.props.filteredLocations.length : 97} </span>\r\n                    of\r\n                    {/* <span> {this.props.allLocations.length} libraries</span></p> */}\r\n                    <span> 97 libraries</span></p>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search here\"\r\n                        className=\"search-input\"\r\n                        id=\"search-input\"\r\n                        name=\"filter\"\r\n                        value={this.state.query}\r\n                        onChange={event => this._updateQuery(event.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"library-list\">\r\n                    {this.props.filteredLocations &&\r\n                        this.props.filteredLocations.map((library, index) => {\r\n                            return (\r\n                                <li\r\n                                    // add onkeypress\r\n                                    tabIndex=\"0\"\r\n                                    key={`library-${index}`}\r\n                                    className=\"library-list-items\"\r\n                                    onClick={() => {\r\n                                        this.props.onViewportChange(library);\r\n                                        this.props.openInfowindow(library);\r\n                                    }}\r\n                                    onMouseOver={() => {\r\n                                        this.props.openInfowindow(library);\r\n                                    }}\r\n                                >\r\n                                {`${library.name}`}\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { PureComponent } from 'react';\r\n\r\n// Map marker SVG path\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\nc0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\nC20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\nexport default class MapPin extends PureComponent {\r\n    render() {\r\n\r\n        // Function to dynamically assign SVG style/fill color\r\n        let _getPinStyle = () => {\r\n            return {\r\n                cursor: 'pointer',\r\n                fill: this.props.fill,\r\n                stroke: 'none',\r\n                transform: `translate(${-size/2}px,${-size}px)`\r\n            }\r\n        }\r\n\r\n        const {size = 20, onClick, onMouseOver} = this.props;\r\n\r\n        return (\r\n            <svg height={size} viewBox='0 0 24 24'\r\n                // if keeping, implement ability to open infowindow with enter key press\r\n                // tabIndex=\"0\"\r\n                style={{..._getPinStyle()}}\r\n                onClick={onClick}\r\n                onMouseOver={onMouseOver}\r\n                >\r\n                <path d={ICON} />\r\n            </svg>\r\n        );\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\n\r\nexport default class Infowindow extends PureComponent {\r\n\r\n    render() {\r\n        const {info} = this.props;\r\n        const displayName = `${info.name}`;\r\n        const tlnCode = `${info.tlnCode}`;\r\n\r\n        return (\r\n            <div\r\n                id=\"infowindow-container\"\r\n            >\r\n                <div\r\n                    tabIndex=\"0\"\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"dialog-title\"\r\n                    id=\"infowindow\"\r\n                >\r\n                    <span id=\"dialog-title\">{displayName}</span> | {tlnCode} | <a\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                        href={`${info.website}`}\r\n                        >\r\n                            Website\r\n                        </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport ReactMapGL, {NavigationControl, Marker, Popup} from 'react-map-gl';\r\nimport MapPin from './MapPin';\r\nimport Infowindow from './Infowindow';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './Map.css';\r\nrequire('dotenv').config();\r\n\r\nconst MAPBOX_STYLE = 'mapbox://styles/mapbox/streets-v9';\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\r\n\r\nexport default class Map extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this._resize = this._resize.bind(this);\r\n  }\r\n  \r\n  // Attach and remove (below) resize event listener to window to update map/viewport state if user resizes\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this._resize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this._resize);\r\n  }\r\n\r\n  // Call to parent viewport change to change viewport state based on current map data\r\n  _onViewportChange = (viewport) => {\r\n    this.props.onViewportChange(viewport);\r\n  }\r\n\r\n  // Close infowindow if user clicks outside of infowindow on the map without interacting with map\r\n  _mapClickToCloseInfowindow = (event) => {\r\n    if (event.target.className === \"overlays\") {\r\n      this.props.closeInfowindow();\r\n    }\r\n  }\r\n\r\n  _closeInfowindow = () => {\r\n    this.props.closeInfowindow();\r\n  }\r\n\r\n  _openInfowindow = (library) => {\r\n    this.props.openInfowindow(library);\r\n  }\r\n\r\n  // Update App.js viewport state for new window size if user resizes window\r\n  _resize() {\r\n    this.props.onViewportChange({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    });\r\n  }\r\n\r\n  // Render infowindow with correct info\r\n  _renderPopup() {\r\n    const popupInfo = this.props.popupInfo;\r\n\r\n    return popupInfo && (\r\n      <Popup\r\n        tipSize={5}\r\n        anchor=\"top\"\r\n        latitude={popupInfo.latitude}\r\n        longitude={popupInfo.longitude}\r\n        onClose={() => this._closeInfowindow()}\r\n      >\r\n      <Infowindow info={popupInfo} />\r\n      </Popup>\r\n    );\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <main\r\n          role=\"application\"\r\n          aria-label=\"map of libraries in The Library Network\"\r\n          tabIndex=\"0\"\r\n        >\r\n          <ReactMapGL          \r\n            {...this.props.viewport}\r\n            mapStyle={MAPBOX_STYLE}\r\n            mapboxApiAccessToken={MAPBOX_TOKEN}\r\n            onViewportChange={viewport => this._onViewportChange(viewport)}\r\n            onClick={event => this._mapClickToCloseInfowindow(event)}\r\n            >\r\n\r\n            {this.props.filteredLocations &&\r\n                this.props.filteredLocations.map((library, index) => {\r\n                    return (\r\n                    <Marker\r\n                      key={`marker-${index}`}\r\n                      latitude={library.latitude}\r\n                      longitude={library.longitude}\r\n                      alt={library.name}\r\n                    >\r\n                    <MapPin\r\n                      // size={20}\r\n                      onMouseOver={() => this._openInfowindow(library)}\r\n                      onClick={() => this._openInfowindow(library)}\r\n                      popupInfo={this.props.popupInfo}\r\n                      fill={(library.selected === \"y\" ? \"red\" : \"blue\")}\r\n                    />\r\n                    </Marker>\r\n                    )\r\n                })\r\n            }\r\n\r\n            {this._renderPopup()}\r\n\r\n            <div className=\"map-nav\">\r\n              <NavigationControl\r\n                onViewportChange={viewport => this._onViewportChange(viewport)}\r\n                />\r\n            </div>\r\n          </ReactMapGL>\r\n        </main>\r\n      )\r\n  }\r\n}","import React, { Component } from 'react';\nimport {FlyToInterpolator} from 'react-map-gl';\nimport Sidebar from './components/Sidebar';\nimport Map from './components/Map';\nimport LIBRARIES from './data/libraries.json';\nimport './App.css';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        latitude: 42.473091,\n        longitude: -83.221076,\n        zoom: 9,\n        maxZoom: 17,\n        bearing: 0,\n        pitch: 0\n      },\n      sidebarOpen: false,\n      popupInfo: null,\n      all: LIBRARIES,\n      filtered: null,\n      hasError: false\n    };\n    this._openInfowindow = this._openInfowindow.bind(this);\n    this._closeInfowindow = this._closeInfowindow.bind(this);\n    this._handleSidebarStateChange = this._handleSidebarStateChange.bind(this);\n    this._onViewportChange = this._onViewportChange.bind(this);\n  }\n\n  // Retrieve library data and set initial state\n\n  componentDidMount = () => {\n    this.setState({\n      filtered: this._filterLocations(this.state.all, \"\")\n    });\n\n    // fetch('https://api.myjson.com/bins/p8xk6')\n    //   .then(response => response.json())\n    //   .then(libraryJSON => this.setState({all: libraryJSON, filtered: libraryJSON }))\n    //   .catch(error => {\n    //     alert(\"Unfortunately there was an error returning the data for this map. Please try again soon.\")\n    //   });\n  }\n\n  // Error checking for this and child components\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  // Check if sidebar is open and if so move focus into the search input\n  _handleSidebarStateChange = (state) => {\n    this.setState({ sidebarOpen: state.isOpen }, function() {\n      this._handleSidebarFocus();\n    });\n  }\n\n  _handleSidebarFocus = () => {\n    if (this.state.sidebarOpen === true) {\n      document.getElementById('search-input').focus();\n  }\n  }\n\n  // Filter locations with each updated query\n  _updateQuery = (query) => {\n    this.setState({\n      filtered: this._filterLocations(this.state.all, query)\n    });\n  }\n\n  _filterLocations = (allLocations, query) => {\n    return allLocations.filter(location => location.name.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  // Return all locations to unselected, close infowindow, and return appropriate focus\n  _closeInfowindow = () => {\n    this.state.all.map(library => library.selected = \"n\");\n    this.setState({ popupInfo: null }, function() {\n      this._handleInfowindowFocus();\n    });\n  }\n\n  // Select appropriate location marker, open infowindow, lock focus on infowindow and allow user to press enter to close infowindow\n  _openInfowindow = (library) => {\n    this.state.all.map(library => library.selected = \"n\");\n    library.selected = \"y\";\n    this.setState({ popupInfo: library }, function() {\n      this._handleInfowindowFocus();\n      document.querySelector('.mapboxgl-popup-content button').addEventListener(\"keydown\", \n        function(event) {\n          if (event.keyCode === 13) {\n            this._closeInfowindow();\n          }\n      }.bind(this));\n    });\n  }\n\n  // Handle infowindow lock focus when open and when closed\n  _handleInfowindowFocus = () => {\n    if (this.state.popupInfo) {\n      document.querySelector('.mapboxgl-popup-content button').focus();\n    }\n    if (!this.state.popupInfo && this.state.sidebarOpen === true) {\n      document.getElementById('search-input').focus();\n    }\n  }\n\n  // Update viewport state data when map is changed by user\n  _onViewportChange = (viewport) => {\n    this.setState({\n      viewport: {...this.state.viewport, ...viewport}\n    });\n}\n\n  // Zoom into marker when location is selected from sidebar list\n  _goToViewport = ({longitude, latitude}) => {\n    this._onViewportChange({\n      longitude,\n      latitude,\n      zoom: 14,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 1000\n    });\n  }\n\n  // Check for error, then render component\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong!</h1>;\n    }\n    \n    return (\n      <div>\n        <Sidebar\n          onViewportChange={this._goToViewport}\n          openInfowindow={this._openInfowindow}\n          allLocations={this.state.all}\n          filteredLocations={this.state.filtered}\n          filterLocations={this._updateQuery}\n          isOpen={this.state.sidebarOpen}\n          handleSidebarStateChange={this._handleSidebarStateChange}\n        />\n          <Map\n            viewport={this.state.viewport}\n            onViewportChange={this._onViewportChange}\n            popupInfo={this.state.popupInfo}\n            openInfowindow={this._openInfowindow}\n            closeInfowindow={this._closeInfowindow}\n            allLocations={this.state.all}\n            filteredLocations={this.state.filtered}\n          ></Map>\n        </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}